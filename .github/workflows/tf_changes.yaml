name: Terraform Change Detection

on:
  pull_request:
    branches:
      - main

jobs:
  tf_changes:
    name: 'Check file changes'
    runs-on: ubuntu-latest
    outputs:
      terraform_dirs: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - uses: actions/checkout@v4
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v43
        with:
          matrix: true
          dir_names: true
          dir_names_exclude_current_dir: true
          files: |
            **.tf
          files_ignore: |
            infrastructure/shared_modules/**

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "$ALL_CHANGED_FILES"

  tf_matrix:
    runs-on: ubuntu-latest
    needs: tf_changes
    strategy:
      matrix:
        terraform_dir: ${{ fromJSON(needs.tf_changes.outputs.terraform_dirs) }}
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      BOOTSTRAP_DIR: "./infrastructure/bootstrap"
      TF_VAR_user_ocid: ${{ secrets.OCI_CLI_USER }}
      TF_VAR_tenancy_ocid: ${{ secrets.OCI_CLI_TENANCY }}
      TF_VAR_fingerprint: ${{ secrets.OCI_CLI_FINGERPRINT }}
      TF_VAR_private_key: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      TF_VAR_region: ${{ secrets.OCI_CLI_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3.0.0
        with:
          terraform_version: 1.7.4

      - name: Terraform Init
        id: tf_init
        working-directory: ${{ matrix.terraform_dir }}
        run: terraform init

      - name: Terraform Validate
        id: tf_validate
        working-directory: ${{ matrix.terraform_dir }}
        run: terraform validate

      - name: Terraform Plan
        id: tf_plan
        working-directory: ${{ matrix.terraform_dir }}
        run: terraform plan -out tfplan
      
      - name: Terraform Show
        id: tf_show
        working-directory: ${{ matrix.terraform_dir }}
        run: terraform show -no-color tfplan
      
      - uses: actions/github-script@v6
        name: Comment Terraform Output
        env: 
          PLAN: ${{ steps.tf_show.outputs.stdout }}
        with:
          script: |
            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
              
            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })`

      # - name: Retrieve the OCID of a named compartment in tenancy
      #   uses: oracle-actions/run-oci-cli-command@v1.1.1
      #   id: find-compartments
      #   with:
      #     command: 'iam compartment list --compartment-id-in-subtree=true'
      #     query: "data[*]"
      # - name: List Results
      #   run: |
      #     echo ${{ steps.find-compartments.outputs.output }} | jq .
